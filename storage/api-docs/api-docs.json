{
    "openapi": "3.0.0",
    "info": {
        "title": "Glitch API",
        "description": "The API for connecting to Glitch",
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication Route"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "authRegister",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Errors"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication Route"
                ],
                "summary": "Sign in",
                "description": "Login by email, password",
                "operationId": "authLogin",
                "requestBody": {
                    "description": "Pass user credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The users email. Login can use either the email or username.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "username": {
                                        "description": "The users username. Login can use either be email or username.",
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "PassWord12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succesfull Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong email address or password. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Login Credentials"
                    }
                }
            }
        },
        "/auth/oneTimeLoginToken": {
            "post": {
                "tags": [
                    "Authentication Route"
                ],
                "summary": "Attempts to login with a one time login token.",
                "description": "Attempts to login with a one time login token.",
                "operationId": "oneTimeLoginToken",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "The token to log the user in with.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succesfull Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No Token Supplied."
                    },
                    "422": {
                        "description": "Unable to authenticate with provided token"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Displays a listing of competitions.",
                "description": "Displays a listing of competitions.",
                "operationId": "resourceList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Competition"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Create a new competition.",
                "description": "Create a new cometition.",
                "operationId": "newResourceStorage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Competition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Retrieve a single competition resource.",
                "description": "Retrieve a single competition resource.",
                "operationId": "showStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Update a competition.",
                "description": "Update a competition.",
                "operationId": "updateStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Competition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to the compeition resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Delete a competition.",
                "description": "Delete a competition.",
                "operationId": "destoryStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Competition successfully deleted"
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/addTeam": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "adds a team to storage.",
                "description": "adds a team to storage.",
                "operationId": "addTeam",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "team_id": {
                                        "description": "The id of the team to add to the competition.",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot add this team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot add this team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/addParticipant": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Adds a participant to storage.",
                "description": "Adds a participant to storage.",
                "operationId": "addParticipant",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "description": "The id of the user to add as a participant",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot add this participant",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot add this participant."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/registerTeam": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Registers a team in storage.",
                "description": "Registers a team for competition.",
                "operationId": "registerTeam",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "team_id": {
                                        "description": "The id of the team to add to register.",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot register this team for competition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannotresigert this team for competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/registerUser": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Registers a participant for the competition. Use the current auth token when registering.",
                "description": "Registers a particpant for the competition. Uses the current auth token when registering.",
                "operationId": "registerParticipant",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot register this participant for a team",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot register this participant for a team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/syncRounds": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Syncs rounds for competitions.",
                "description": "Syncs rounds for competitions.",
                "operationId": "syncRounds",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "number_of_competitors": {
                                        "description": "Optional to pass the number of competitors. Default will be the number of competitors that have registered.",
                                        "type": "integer"
                                    },
                                    "competitors_per_bracket": {
                                        "description": "Optional to pass the competitors per bracket. Default will be the set competitors per match.",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Cannot sync these rounds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot sync these rounds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competiton."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/rounds/{round_id}/brackets/autoGenerate": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Generates team brackets.",
                "description": "Generates team brackets.",
                "operationId": "autoGenerateTeamBrackets",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The round is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The round is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/autoGenerateUserBrackets": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Generates user brackets.",
                "description": "Generates user brackets.",
                "operationId": "autoGenerateUserBrackets",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionFull"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The round is required.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The round is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/uploadMainImage": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Upload main image to competition.",
                "description": "Upload main image to competition.",
                "operationId": "uploadMainImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionFull"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/uploadBannerImage": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Upload banner image to storage.",
                "description": "Upload banner image to storage.",
                "operationId": "uploadBannerImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionFull"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/invites": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Display a list of invites.",
                "description": "Display a list of invites.",
                "operationId": "competitionUserInviteList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionInvite"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Accessed denied to listing invites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Accessed denied to listing invites."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/sendInvite": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Send an invite to a user.",
                "description": "Send an invite to a user.",
                "operationId": "competitionSendInvite",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionInvite"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionInvite"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No invites listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot send invite to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/acceptInvite": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Use this endpoint to accept the invite. Requires the users auth token to validate.",
                "description": "Use this endpoint to accept the invite. Requires the users auth token to validate.",
                "operationId": "competitionAcceptInvite",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "The token that was created with the invite.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionInvite"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No invites listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Invite is not associated with the current user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "No invites listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Invite does not belong to this competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/rounds/{round_id}/brackets": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Displays a listing of the resource.",
                "description": "Displays a listing of the resource.",
                "operationId": "resourceRoundBracketList1",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionRoundBracket"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No round brackets listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot list brackets."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Store a newly created resource in storage.",
                "description": "Store a newly created resource in storage.",
                "operationId": "resourceRoundBracketStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionRoundBracket"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "": {
                                            "$ref": "#/components/schemas/CompetitionRoundBracket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No round brackets listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot store brackets."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/rounds/{round_id}/brackets/{bracket_id}": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Display the specific resource.",
                "description": "Display the specific resource.",
                "operationId": "resourceRoundBracketShow",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bracket_id",
                        "in": "path",
                        "description": "The bracket number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "": {
                                            "$ref": "#/components/schemas/CompetitionRoundBracket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "No round brackets displayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot display brackets."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Updating resource in storage.",
                "description": "Updating resource in storage with new information.",
                "operationId": "updateRoundBracket",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bracket_id",
                        "in": "path",
                        "description": "The bracket number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionRoundBracket"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionRoundBracket"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Removes a specific resource from storage.",
                "description": "Removes a specific resource from storage.",
                "operationId": "destoryRoundBracket",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "bracket_id",
                        "in": "path",
                        "description": "The bracket number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionRoundBracket"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/rounds": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Display the rounds associated with a competition.",
                "description": "Display the rounds associated with a competition.",
                "operationId": "resourceRoundList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionRound"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Create a new round for the competition.",
                "description": "Create a new round for the competition.",
                "operationId": "resourceRoundStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionRound"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionRound"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No rounds listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot store round."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Validation errors."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/rounds/{round_id}": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Retrieve the information for a single round.",
                "description": "Retrieve the information for a single round.",
                "operationId": "resourceRoundShow",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionRound"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CompetitionRound"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No rounds displayed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot display rounds."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Updating resource in storage.",
                "description": "Updating resource in storage with new information.",
                "operationId": "updateRound",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionRound"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Competition/round not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Competition/round not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Deletes the round for the competition.",
                "description": "Deletes the round for the competition.",
                "operationId": "destoryRound",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "round_id",
                        "in": "path",
                        "description": "The round number.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "": {
                                            "$ref": "#/components/schemas/CompetitionRound"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/teams": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Retrieve a list of teams associated with the competition.",
                "description": "Retrieve a list of teams associated with the competition.",
                "operationId": "resourceCompetitionTeamList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionTeam"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No rounds listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot list this team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Associate a new team with the competition.",
                "description": "Associate a new team with the competition.",
                "operationId": "resourceCompetitionTeamStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionTeam"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionTeam"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/teams/{team_id}": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Display the contents of a single team associated with the competition.",
                "description": "Display the contents of a single team associated with the competition.",
                "operationId": "resourceTeamShow",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "team",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionTeam"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition/team relationship does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition/team relationship does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Update the team information associated with the competition.",
                "description": "Update the team information associated with the competition.",
                "operationId": "updateTeam",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "team_id",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionTeam"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionTeam"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Removes the team from the competition.",
                "description": "Remoes the team from the competition.",
                "operationId": "destoryTeam",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "team_id",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/users": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "List all the users associated with a competition.",
                "description": "List all the users associated with a competition.",
                "operationId": "competitionUserList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionUser"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Associate a new users with the competition.",
                "description": "Associate a new users with the competition.",
                "operationId": "createCompetitionUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errors when creating user"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/users/{user_id}": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Show a single user by its ID.",
                "description": "Show a single user by its ID.",
                "operationId": "showCompetitionUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionUser"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Update the user associated with competition.",
                "description": "Update the user associated with competition.",
                "operationId": "updateCompetitionUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to venue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Remove the associated user from the competition.",
                "description": "Remove the associated user from the competition.",
                "operationId": "removeCompetitionUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/venues": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "List all the venues associated with a competition.",
                "description": "List all the venues associated with a competition.",
                "operationId": "venueList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CompetitionVenue"
                                    }
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "No competitions listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "No competitions listed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Creating a new venue.",
                "description": "Creating a new venue.",
                "operationId": "createVenue",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionVenue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionVenue"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to venue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "New venue not created"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/venues/{venue_id}": {
            "get": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Show a single venue by its ID.",
                "description": "Show a single venue by its ID.",
                "operationId": "showVenue",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "venue_id",
                        "in": "path",
                        "description": "UUID of the venue.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionVenue"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Update the venue.",
                "description": "Update the venue.",
                "operationId": "updateVenue",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "venue_id",
                        "in": "path",
                        "description": "UUID of the venue.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompetitionVenue"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionVenue"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to venue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to venue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Deletes the venue from the competition.",
                "description": "Deletes the venue from the competition.",
                "operationId": "removeCompetitionVenue",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "venue_id",
                        "in": "path",
                        "description": "UUID of the venue.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Venue successfully deleted from competition."
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/competitions/{uuid}/venues/{venue_id}/uploadMainImage": {
            "post": {
                "tags": [
                    "Competitions Route"
                ],
                "summary": "Upload venue main image to storage.",
                "description": "Upload venue main image to storage.",
                "operationId": "uploadVenueMainImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the competition",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "venue_id",
                        "in": "path",
                        "description": "UUID of the venue",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompetitionFull"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to competition.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Displays a listing of events.",
                "description": "Displays a listing of events.",
                "operationId": "resourceEventList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Create a new event.",
                "description": "Create a new event.",
                "operationId": "newEventResourceStorage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}": {
            "get": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Retrieve a single event resource.",
                "description": "Retrieve a single event resource.",
                "operationId": "showEventStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Update a event.",
                "description": "Update a event.",
                "operationId": "updateEventStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to the event resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Delete an event.",
                "description": "Delete an event.",
                "operationId": "destoryEventStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event successfully deleted"
                    },
                    "403": {
                        "description": "Access denied to event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to event."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/invirtu": {
            "put": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Update an Invirtu event.",
                "description": "Update an Invirtu event.",
                "operationId": "updateInvirtuEventStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to Invirtu event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to the Invirtu event resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "events/{uuid}/addRTMPSource": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Adds an RTMP source to the event that when streamed, the stream will be multicasted to the RTMP endpoint.",
                "description": "Adds an RTMP source to the event that when streamed, the stream will be multicasted to the RTMP endpoint.",
                "operationId": "addRTMPSource",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the RTMP source",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "rtmp_source": {
                                        "description": "The id of the team to add to the RTMP source.",
                                        "type": "string",
                                        "format": "uuid"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot add this RTMP source",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot add this RTMP source."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/updateRTMPSource/{subid}": {
            "put": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Update the RTMP source.",
                "description": "Update the RTMP source.",
                "operationId": "updateRTMPSourceStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the RTMP source",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RTMPSource"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to RTMP source.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to RTMP source resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/removeRTMPSource/{subid}": {
            "delete": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Delete a RTMP source from the event.",
                "description": "Delete a RTMP source from the event.",
                "operationId": "destoryRTMPSourceStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the RTMP source",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "RTMP source successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to RTMP source.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to RTMP source."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/uploadMainImage": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Upload main image for event.",
                "description": "Upload main image for event.",
                "operationId": "uploadMainEventImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/uploadBannerImage": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Upload banner image to storage.",
                "description": "Upload banner image to storage.",
                "operationId": "uploadBannerEventImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to event."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/enableBroadcastMode": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Enable the broadcast mode where the video stream is being 'broadcasted' from an on-screen source such as as screenshare.",
                "description": "Enable the broadcast mode where the video stream is being 'broadcasted' from an on-screen source such as as screenshare.",
                "operationId": "enableBroadcastMode",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Enable broadcast mode",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/enableLivestreamMode": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Enable livestream mode where the stream will be outputted to the invirtu rtmp livestream endpoint.",
                "description": "Enable livestream mode where the stream will be outputted to the invirtu rtmp livestream endpoint.",
                "operationId": "enableLivestreamMode",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Enable livestream mode",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to lives stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/syncAsLive": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Restream live.",
                "description": "Restream live.",
                "operationId": "syncLive",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Sync live",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Cannot add restream to event.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot add restream to event."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/sendOnScreenContent": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Sends content such as text that will appear on the screen and the user viewers can see.",
                "description": "Sends content such as text that will appear on the screen and the user viewers can see.",
                "operationId": "sendOnScreenContent",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Sync live",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/addOverlay": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Upload overlay image to storage. Overlay images can appear to cover the entire screen for the viewers.",
                "description": "Upload overlay image to storage. Overlay images can appear to cover the entire screen for the viewers",
                "operationId": "uploadOverlayImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The stream does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The stream does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/removeOverlay/{subid}": {
            "delete": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Delete a overlay.",
                "description": "Delete a overlay.",
                "operationId": "destoryOverlayStorage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "overlay successfully deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to overlay.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/enableOverlay/{subid}": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Enable the overlay will have the overlay appear on-screen for the viewers.",
                "description": "Enable the overlay will have the overlay appear on-screen for the viewers.",
                "operationId": "enableOverlayImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The stream does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The stream does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/disableOverlay": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Disabling the overlay will remove an overlay from the screen and users can watch the content.",
                "description": "Disabling the overlay will remove an overlay from the screen and users can watch the content.",
                "operationId": "disableOverlay",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "overlay successfully disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to overlay.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/enableDonations": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Enable donations so users can accept donations.",
                "description": "Enable donations so users can accept donations.",
                "operationId": "enableDonations",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "Enable donations",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to live stream.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to lives stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/disableDonations": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Disable donations.",
                "description": "Disable donations.",
                "operationId": "disableDonations",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the event",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Donations successfully disabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventFull"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to overlay.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to live stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/sendInvite": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Create a new invite.",
                "description": "Create a new invite.",
                "operationId": "newInviteResourceStorage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Invite not stored.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot invite user to the stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/events/{uuid}/acceptInvite": {
            "post": {
                "tags": [
                    "Event Route"
                ],
                "summary": "Accept new invite.",
                "description": "Accept new invite.",
                "operationId": "acceptInviteResourceStorage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "403": {
                        "description": "Invite not stored.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot invite user to the stream."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/auth/forgotpassword": {
            "post": {
                "tags": [
                    "Authentication Route"
                ],
                "summary": "Request a new password for a user.",
                "description": "Request a new password for a user.",
                "operationId": "authForgotPassword",
                "requestBody": {
                    "description": "Send users information to start the reset procress.",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The users email.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Password Reset Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "New password request sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "There is no user with that email.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There is no user with that email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/resetpassword": {
            "post": {
                "tags": [
                    "Authentication Route"
                ],
                "summary": "Reset the users password.",
                "description": "Reset the users password.",
                "operationId": "authResetPassword",
                "requestBody": {
                    "description": "Reset the users password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "new_password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The user's email.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@mail.com"
                                    },
                                    "token": {
                                        "description": "The token that was sent with the request to reset the password.",
                                        "type": "string"
                                    },
                                    "new_password": {
                                        "description": "The new password to set for the user.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Succesful Password Reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "There was an error resetting your password..",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "There was an error resetting your password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Displays a list of teams",
                "description": "Displays a list of teams.",
                "operationId": "teamsList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Team"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Create new team.",
                "description": "Create a new team.",
                "operationId": "teamCreate",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}": {
            "get": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Retrieve a single teams resource.",
                "description": "Retrieve a single teams resource.",
                "operationId": "teamShow",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Update a team.",
                "description": "Update a team.",
                "operationId": "teamUpdate",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Team"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to the team resource.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to team resource."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Delete a team.",
                "description": "Delete a team.",
                "operationId": "teamDelete",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Team successfully deleted"
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/uploadMainImage": {
            "post": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Upload main image to team.",
                "description": "Upload main image to team.",
                "operationId": "teamUploadMainImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The team does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/uploadBannerImage": {
            "post": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Upload banner image to team.",
                "description": "Upload banner image to team.",
                "operationId": "teamUploadBannerImage",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The team does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/invites": {
            "get": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Display a list of invites.",
                "description": "Display a list of invites.",
                "operationId": "teamsUserInviteList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamInvite"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The competition does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The competition does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Accessed denied to listing invites.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Accessed denied to listing invites."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/sendInvite": {
            "post": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Send an invite to a user.",
                "description": "Send an invite to a user.",
                "operationId": "teamSendInvite",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamInvite"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamInvite"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The team does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No invites listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Cannot send invite to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/acceptInvite": {
            "post": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Use this endpoint to accept the invite. Requires the users auth token to validate.",
                "description": "Use this endpoint to accept the invite. Requires the users auth token to validate.",
                "operationId": "teamAcceptInvite",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "The token that was created with the invite.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamInvite"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The team does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No invites listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Invite is not associated with the current user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "No invites listed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Invite does not belong to this competition."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/users": {
            "get": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "List all the users associated with a team.",
                "description": "List all the users associated with a team.",
                "operationId": "teamUserList",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TeamUser"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The team does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Associate a new users with the team.",
                "description": "Associate a new users with the team.",
                "operationId": "createTeamUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The team does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to the team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denied to the team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Errors when creating user"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/teams/{uuid}/users/{user_id}": {
            "get": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Show a single user by its ID.",
                "description": "Show a single user by its ID.",
                "operationId": "showTeamUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamUser"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Update the user associated with team.",
                "description": "Update the user associated with team.",
                "operationId": "updateTeamUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamUser"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to venue."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Teams Route"
                ],
                "summary": "Remove the associated user from the team.",
                "description": "Remove the associated user from the team.",
                "operationId": "removeTeamUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the team.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "The team does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to team."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied to team.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Access denined to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Retrieve a list of users.",
                "description": "Retrieve a list of users.",
                "operationId": "userList",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Updates a user but requires the JWT of the user being updated.",
                "description": "Updates a user but requires the JWT of the user being updated.",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The user does not exist.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "The user does not exist.."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors occured.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Validation errors occured."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/{uuid}/follow": {
            "post": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Toggle following a user. So if not following, accessing this route will follow the user. And if the user is being followed, it will unfollow them.",
                "description": "Toggle following a user. So if not following, accessing this route will follow the user. And if the user is being followed, it will unfollow them.",
                "operationId": "userToggleFollow",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the user to follow/unfollow.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/{uuid}/profile": {
            "get": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Show a single user by their ID.",
                "description": "Show a single user by their ID.",
                "operationId": "showUser",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "UUID of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/me": {
            "get": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Retrieves the user based on the current auth token being used.",
                "description": "Retrieves the user based on the current auth token being used.",
                "operationId": "showMe",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/oneTimeToken": {
            "get": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Retrieves the one time login token based on the current auth token being used.",
                "description": "Retrieves the one time login token based on the current auth token being used.",
                "operationId": "userOneTimeLoginToken",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserOneTimeToken"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/uploadAvatarImage": {
            "post": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Upload the user's avatar. Uses the current users auth token to select which user being updated.",
                "description": "Upload the user's avatar. Uses the current users auth token to select which user being updated.",
                "operationId": "userUploadAvatarImage",
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access to user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Unauthorized access to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/uploadBannerImage": {
            "post": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Upload the user's banner. Uses the current users auth token to select which user being updated.",
                "description": "Upload the user's banner. Uses the current users auth token to select which user being updated.",
                "operationId": "userUploadBannerImage",
                "requestBody": {
                    "description": "Image file to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access to user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "Unauthorized access to user."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/users/createDonationPage": {
            "post": {
                "tags": [
                    "Users Route"
                ],
                "summary": "Creates a donation page for the user to accept donations. Users current auth token.",
                "description": "Creates a donation page for the user to accept donations. Users current auth token.",
                "operationId": "userCreateDonationPage",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserFull"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CompetitionFull": {
                "title": "Competition Extended Model",
                "description": "The competition model with complete information.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Competition"
                    },
                    {
                        "properties": {
                            "admins": {
                                "description": "A list of users who are following the current user.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "contestants": {
                                "description": "A list of users who the current user is following.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "venues": {
                                "description": "A list of venues associated with the competition.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            },
                            "rounds": {
                                "description": "A list of rounds associated witht he competition.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CompetitionRound"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CompetitionInvite": {
                "title": "Competition Invite Model",
                "description": "Keep track of users when that have been invited to a competition.",
                "required": [
                    "name",
                    "email",
                    "competition_id"
                ],
                "properties": {
                    "id": {
                        "description": "The uuid of invite.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "email": {
                        "description": "The email address of the person that is invited.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "name": {
                        "description": "The name of the person that is invited.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "competition_id": {
                        "description": "The id of the competition that the invite belongs too.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "invited_as_participant": {
                        "description": "Sets if the user is to be invited as an individual participant.",
                        "type": "boolean"
                    },
                    "invited_as_team_member": {
                        "description": "Sets if the user is to be invited as part of a team.",
                        "type": "boolean"
                    },
                    "accepted_invite": {
                        "description": "Is true of the user has accepted the invite.",
                        "type": "boolean"
                    },
                    "token": {
                        "description": "The auto-generated token that is sent along with the invite.",
                        "type": "string",
                        "maxLength": 255,
                        "readOnly": true
                    },
                    "role": {
                        "description": "The role the user is being invited as.",
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2"
                        ]
                    }
                },
                "type": "object"
            },
            "Competition": {
                "title": "Competition Model",
                "description": "The model that describes a competition",
                "required": [
                    "name",
                    "description"
                ],
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "The id of the competition.",
                                "type": "string",
                                "format": "uuid"
                            },
                            "name": {
                                "description": "The name of the competiton.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "description": {
                                "description": "A description of competition.",
                                "type": "string"
                            },
                            "start_date": {
                                "description": "The start date of the competition.",
                                "type": "string",
                                "format": "date-time"
                            },
                            "end_date": {
                                "description": "The end date of the competition.",
                                "type": "string",
                                "format": "date-time"
                            },
                            "registration_start_date": {
                                "description": "The registration start date of the competition.",
                                "type": "string",
                                "format": "date-time"
                            },
                            "registration_end_date": {
                                "description": "The registration end date of the competition.",
                                "type": "string",
                                "format": "date-time"
                            },
                            "type": {
                                "description": "The type of competition.",
                                "type": "integer",
                                "enum": [
                                    "1",
                                    "2",
                                    "3",
                                    "4",
                                    "5",
                                    "6",
                                    "7",
                                    "8",
                                    "9"
                                ]
                            },
                            "contact_name": {
                                "description": "The name of the contact person to contact about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "contact_email": {
                                "description": "The contact email to send inquires too about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "contact_phone_number": {
                                "description": "The phone number to call for inquires about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "website": {
                                "description": "The phone number to call for inquires about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "main_image": {
                                "description": "Read only file of the main image of the competition.",
                                "type": "string",
                                "maxLength": 255,
                                "readOnly": true
                            },
                            "bannner_image": {
                                "description": "Read only file of the banner image of the competition.",
                                "type": "string",
                                "maxLength": 255,
                                "readOnly": true
                            },
                            "allow_team_signup": {
                                "description": "Will allow teams to sign-up to the competition.",
                                "type": "boolean"
                            },
                            "allow_individual_signup": {
                                "description": "Will allow individuals to sign-up to the competition.",
                                "type": "boolean"
                            },
                            "require_attendee_rsvp": {
                                "description": "Attendees will be required to RSVP to access competition and its events.",
                                "type": "boolean"
                            },
                            "is_private": {
                                "description": "If the event is private and will not show on lists.",
                                "type": "boolean"
                            },
                            "competitors_per_match": {
                                "description": "The number of competitors to have in a single match. This value is used when matches are auto generated.",
                                "type": "integer"
                            },
                            "winners_per_match": {
                                "description": "The number winners to allow per match when there is more than 2 competitors.",
                                "type": "integer"
                            },
                            "max_registration_for_teams": {
                                "description": "The maximum number of teams that will be allowed to sign-up for the compeititon. Optional field, leave null or 0 for infinite.",
                                "type": "integer"
                            },
                            "max_registration_for_users": {
                                "description": "The maximum number of individual users that will be allowed to sign-up for the compeititon. Optional field, leave null or 0 for infinite.",
                                "type": "integer"
                            },
                            "minimum_team_size": {
                                "description": "The minimum amount of people required to be on a team to allow sign-up.",
                                "type": "integer"
                            },
                            "checkin_enabled": {
                                "description": "Enable check-in that will have users check-in to the compeitition.",
                                "type": "boolean"
                            },
                            "checkin_mintues_prior": {
                                "description": "The number of minutes prior to the competition that the user must check-in.",
                                "type": "integer"
                            },
                            "team_signup_requires_approval": {
                                "description": "Once a team has signed up, this will require an administrator to approve them before they can be considered registered.",
                                "type": "boolean"
                            },
                            "individual_signup_requires_approval": {
                                "description": "Once an individual has signed up, this will require an administrator to approve them before they can be considered registered.",
                                "type": "boolean"
                            },
                            "team_registration_price": {
                                "description": "The cost associated when registering a team.",
                                "type": "number",
                                "format": "float"
                            },
                            "individual_registration_price": {
                                "description": "The cost associated when registering a individual user.",
                                "type": "number",
                                "format": "float"
                            },
                            "grand_prize_total": {
                                "description": "The total amount the grand prize is worth.",
                                "type": "number",
                                "format": "float"
                            },
                            "currency": {
                                "description": "The currecny for the tournmanet.",
                                "type": "string",
                                "maxLength": 5,
                                "example": "USD"
                            },
                            "require_contestant_waiver": {
                                "description": "Will require constentants to sign a waiver before registering.",
                                "type": "boolean"
                            },
                            "require_attendee_waiver": {
                                "description": "Will require attendees to sign a waiver before registering.",
                                "type": "boolean"
                            },
                            "rules": {
                                "description": "Enter all the rules for competition.",
                                "type": "string"
                            },
                            "agreement": {
                                "description": "Enter the agreement a user must agree to for entering the competition.",
                                "type": "string"
                            },
                            "schedule": {
                                "description": "Enter the schedule for the competition.",
                                "type": "string"
                            },
                            "disqualifiers": {
                                "description": "Set any disqualifers for the competition.",
                                "type": "string"
                            },
                            "refund_policy": {
                                "description": "Set the refund policy for the competition.",
                                "type": "string"
                            },
                            "harassment_policy": {
                                "description": "Set an harassment policy for the competition.",
                                "type": "string"
                            },
                            "saftey_policy": {
                                "description": "Set a safety policy for the competition.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/BaseSocialFields"
                    }
                ]
            },
            "CompetitionRoundBracket": {
                "title": "Competition Round Bracket Model",
                "description": "The mode of how a bracket is defined that is inside a round.",
                "properties": {
                    "id": {
                        "description": "The id of the bracket for the round.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "competition_id": {
                        "description": "The id of the competition the bracket belongs too.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "round": {
                        "description": "The round the bracket is associate with.",
                        "type": "integer",
                        "readOnly": true
                    },
                    "bracket": {
                        "description": "The current bracket.",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "The id of the user for this bracket/round.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "team_id": {
                        "description": "The id of the team for this bracket/round.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "event_id": {
                        "description": "The id of the event the event is associated with.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "is_winner": {
                        "description": "Sets true if the current user is the winner.",
                        "type": "boolean"
                    },
                    "is_finished": {
                        "description": "Sets true if the match is finished.",
                        "type": "boolean"
                    },
                    "checked_in": {
                        "description": "Sets true if the user has checked in.",
                        "type": "boolean"
                    },
                    "bracket_start_date": {
                        "description": "The start date for the bracket to begin.",
                        "type": "date-time"
                    },
                    "bracket_end_date": {
                        "description": "The end date for the bracket to end.",
                        "type": "date-time"
                    },
                    "cash_awarded": {
                        "description": "The amount of cash awarded to the winner.",
                        "type": "number",
                        "format": "float"
                    },
                    "points_awarded": {
                        "description": "The amount of points awarded to the winner.",
                        "type": "number",
                        "format": "float"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "team": {
                        "$ref": "#/components/schemas/User"
                    },
                    "created_at": {
                        "description": "The date the bracket/round  was created.",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "The date the bracket/round was last updated.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CompetitionRound": {
                "title": "Competition Round Model",
                "description": "The model that relates to how a round is associated with competition.",
                "properties": {
                    "competition_id": {
                        "description": "The id of the competition the round belongs too.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "round": {
                        "description": "The round in the current competition",
                        "type": "integer"
                    },
                    "title": {
                        "description": "The title given to then round.",
                        "type": "string"
                    },
                    "overview": {
                        "description": "The overview description of the round.",
                        "type": "string"
                    },
                    "round_start_date": {
                        "description": "The start date of the round.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "round_end_date": {
                        "description": "The end date of the round.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "checkin_enabled": {
                        "description": "Set if check-in is enabled for this round.",
                        "type": "boolean"
                    },
                    "checkin_mintues_prior": {
                        "description": "The number of minutes check-in is required before the round begins.",
                        "type": "integer"
                    },
                    "elimination_type": {
                        "description": "The elimination type for this round.",
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9"
                        ]
                    },
                    "venue_id": {
                        "description": "The id of the venue the round is associated with.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "brackets": {
                        "description": "The brackets associated with the round.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompetitionRoundBracket"
                        }
                    }
                },
                "type": "object"
            },
            "CompetitionTeam": {
                "title": "Competition Team Model",
                "description": "Controls how a team is associated with a competition.",
                "properties": {
                    "competition_id": {
                        "description": "The id of the competition the team belongs too.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "team_id": {
                        "description": "The id of the team associated with the relationship.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "checked_in": {
                        "description": "If the team has checked-in.",
                        "type": "boolean"
                    },
                    "waiver_signed": {
                        "description": "If the waiver has been signed for the team.",
                        "type": "boolean"
                    },
                    "entry_fee_paid": {
                        "description": "If the waiver has been signed for the team.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The current statues of the team in the competition.",
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9"
                        ]
                    }
                },
                "type": "object"
            },
            "CompetitionTicketPurchase": {
                "title": "Competition Ticket Purchase Model",
                "description": "Every time a ticket is purchased or rsvped to an event, it is recorded in this model.",
                "properties": {
                    "id": {
                        "description": "The id of the ticket purchase.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "cteam_id": {
                        "description": "The id of the team associated with the relationship.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "checked_in": {
                        "description": "If the team has checked-in.",
                        "type": "boolean"
                    },
                    "waiver_signed": {
                        "description": "If the waiver has been signed for the team.",
                        "type": "boolean"
                    },
                    "entry_fee_paid": {
                        "description": "If the waiver has been signed for the team.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The current statues of the team in the competition.",
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9"
                        ]
                    }
                },
                "type": "object"
            },
            "CompetitionUser": {
                "title": "Competition User Model",
                "description": "Manage a user relationship with a competition.",
                "required": [
                    "competition_id",
                    "user_id"
                ],
                "properties": {
                    "competition_id": {
                        "description": "The id of the competition.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "user_id": {
                        "description": "The id of the user associated with the competition.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "checked_in": {
                        "description": "If the user has checked-in.",
                        "type": "boolean"
                    },
                    "waiver_signed": {
                        "description": "If the waiver has been signed for the user.",
                        "type": "boolean"
                    },
                    "entry_fee_paid": {
                        "description": "If the waiver has been signed for the user.",
                        "type": "boolean"
                    },
                    "status": {
                        "description": "The current status of the user in the competition.",
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9"
                        ]
                    }
                },
                "type": "object"
            },
            "CompetitionVenue": {
                "title": "Competition Venue Model",
                "description": "Setup competitions to take place in venues.",
                "required": [
                    "venue_name",
                    "is_virtual_hybrid_remote",
                    "competition_id"
                ],
                "properties": {
                    "id": {
                        "description": "The id of the venue",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "venue_name": {
                        "description": "The name of the venue.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "address_line_1": {
                        "description": "The first address line of the venue.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "address_line_2": {
                        "description": "The second address line of the venue.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "postal_code": {
                        "description": "The postol/zipcode of the venue.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "locality": {
                        "description": "The locality of venue (ie: city).",
                        "type": "string",
                        "maxLength": 255
                    },
                    "province": {
                        "description": "The province of venue (ie: state).",
                        "type": "string",
                        "maxLength": 255
                    },
                    "country": {
                        "description": "The country of the venue.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "is_virtual_hybrid_remote": {
                        "description": "Select if the venue is online, physical or hybrid - both.",
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3"
                        ]
                    },
                    "competition_id": {
                        "description": "The id of the competition the venue is associated with.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "venue_direction_instructions": {
                        "description": "Set instructions on how to reach the venue.",
                        "type": "string"
                    },
                    "venue_access_instructions": {
                        "description": "Set instructions on how to access the venue.",
                        "type": "string"
                    },
                    "additional_notes": {
                        "description": "Add any additional information about the venue.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time the event was created at.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "The timestamp the event was last updated.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "EventFull": {
                "title": "Event Extended Model",
                "description": "The event model.",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Competition"
                    },
                    {
                        "properties": {
                            "admins": {
                                "description": "Users that are admins to the event.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "moderators": {
                                "description": "Users who are moderators to the event.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "speakers": {
                                "description": "Users who are co-host to the event.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "overlays": {
                                "description": "A list of overlays associated with the current event.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventOverlay"
                                }
                            },
                            "restreams": {
                                "description": "A list of RTMP endpoints the stream will be multicasted too.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RTMPSource"
                                }
                            },
                            "recordings": {
                                "description": "A list of recordings of the streamsings.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Recordings"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "EventInvite": {
                "title": "Event Invite Model",
                "description": "Manages how a user is invited to an event.",
                "properties": {
                    "id": {
                        "description": "The uuid of invite.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "email": {
                        "description": "The email address of the person that is invited.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the person that is invited.",
                        "type": "string"
                    },
                    "event_id": {
                        "description": "The id of the team that the invite belongs too.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "invited_as_cohost": {
                        "description": "Sets if the user is to be invited as co-host to the event where they can join chat with the host.",
                        "type": "boolean"
                    },
                    "accepted_invite": {
                        "description": "Is true of the user has accepted the invite.",
                        "type": "boolean"
                    },
                    "token": {
                        "description": "The auto-generated token that is sent along with the invite.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "EventOverlay": {
                "title": "Event Overlay Model",
                "description": "Manage the overlays that appear over screens at events.",
                "properties": {
                    "id": {
                        "description": "The id of overlay.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "event_id": {
                        "description": "The event id the overlay is associated with.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "image_url": {
                        "description": "The url of where the overlay resides",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "If the overlay is active or not.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "Event": {
                "title": "Events Model",
                "description": "The data associated with an event.",
                "properties": {
                    "id": {
                        "description": "The id of the event",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "title": {
                        "description": "The name of the event",
                        "type": "string"
                    },
                    "is_live": {
                        "description": "A boolean that indicates if the event is currently live.",
                        "type": "boolean"
                    },
                    "is_public": {
                        "description": "A boolean that indicates if the event is public or private.",
                        "type": "boolean"
                    },
                    "live_last_checkin": {
                        "description": "A date/time field that is set when the last is_live check was performed to determine if the event is live.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "mode": {
                        "description": "The mode of sharing the live stream (screenshare, rtmp, etc)",
                        "type": "string",
                        "enum": [
                            "0",
                            "1",
                            "2"
                        ],
                        "readOnly": true
                    },
                    "admins": {
                        "description": "A list of users who are administrators for this event.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "description": "The time the event was created at.",
                        "type": "timestamp",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "The timestamp the event was last updated.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_id": {
                        "description": "The id associated with the invirtu live event, that controls the streaming.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_webrtc_url": {
                        "description": "The URL for joining a WebRTC video chat session using for streaming the games.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_broadcast_url": {
                        "description": "The URL to send a broadcast too using Invirtu.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_rtmp_livestream_endpoint": {
                        "description": "The endpoint to send an RTMP stream too.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_rtmp_livestream_key": {
                        "description": "The stream key used for accessing the rtmp endpoint for the livestream.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_rtmp_broadcast_endpoint": {
                        "description": "The endpoint to send an RTMP broadcast too.",
                        "type": "string",
                        "readOnly": true
                    },
                    "invirtu_rtmp_broadcast_key": {
                        "description": "The stream key used for accessing the rtmp endpoint for the broadcast.",
                        "type": "string",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Follow": {
                "title": "Followers Relationship Model",
                "description": "The data that descibes the relationing of follower/following. Think of it as subscibing to another user.",
                "properties": {
                    "follower": {
                        "$ref": "#/components/schemas/User"
                    },
                    "following": {
                        "$ref": "#/components/schemas/User"
                    },
                    "created_at": {
                        "description": "The time the event was created at.",
                        "type": "timestamp"
                    },
                    "updated_at": {
                        "description": "The timestamp the event was last updated.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "TeamInvite": {
                "title": "Team Invite Model",
                "description": "Manages how a user is invited to a team.",
                "properties": {
                    "id": {
                        "description": "The uuid of invite.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "email": {
                        "description": "The email address of the person that is invited.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the person that is invited.",
                        "type": "string"
                    },
                    "team_id": {
                        "description": "The id of the team that the invite belongs too.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "accepted_invite": {
                        "description": "Is true of the user has accepted the invite.",
                        "type": "boolean"
                    },
                    "token": {
                        "description": "The auto-generated token that is sent along with the invite.",
                        "type": "string",
                        "readOnly": true
                    },
                    "role": {
                        "description": "The role the user is being invited as.",
                        "type": "integer",
                        "enum": [
                            "0",
                            "1",
                            "2"
                        ]
                    }
                },
                "type": "object"
            },
            "Team": {
                "title": "Team Model",
                "description": "The model that describes the attributes for a team.",
                "allOf": [
                    {
                        "properties": {
                            "id": {
                                "description": "The id of the team.",
                                "type": "string",
                                "format": "uuid",
                                "readOnly": true
                            },
                            "name": {
                                "description": "The name of the team.",
                                "type": "string"
                            },
                            "description": {
                                "description": "A description of the team",
                                "type": "string"
                            },
                            "main_image": {
                                "description": "The main image for the team. Is a read-only field.",
                                "type": "string"
                            },
                            "banner_image": {
                                "description": "The banner image for the team. Is a read-only field.",
                                "type": "string"
                            },
                            "logo": {
                                "description": "The logo image for the team. Is a read-only field.",
                                "type": "string"
                            },
                            "contact_name": {
                                "description": "The name of the contact person to contact about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "contact_email": {
                                "description": "The contact email to send inquires too about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "contact_phone_number": {
                                "description": "The phone number to call for inquires about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "website": {
                                "description": "The phone number to call for inquires about the team.",
                                "type": "string",
                                "maxLength": 255
                            },
                            "join_process": {
                                "description": "The process for another user joing a team.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    {
                        "$ref": "#/components/schemas/BaseSocialFields"
                    }
                ]
            },
            "TeamUser": {
                "title": "Team User Model",
                "description": "Manages how a user relates to a team.",
                "properties": {
                    "user_id": {
                        "description": "The user id associated with the team.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "team_id": {
                        "description": "The team id associated with the user.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "one_time_login_token": {
                        "description": "The token that must be passed back when logging in",
                        "type": "string"
                    },
                    "user_role": {
                        "description": "The The role of the current user.",
                        "type": "integer"
                    },
                    "status": {
                        "description": "The status of the user.",
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9"
                        ]
                    },
                    "waiver_signed": {
                        "description": "Indicates if the waiver for the user has been signed.",
                        "type": "boolean"
                    },
                    "is_competitor": {
                        "description": "Not everyone on a team has  to be competitor, (ie: business manager). This boolean will make the user as a competitor.",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UserFull": {
                "title": "User Extended Model",
                "description": "The user model with complete information",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "properties": {
                            "followers": {
                                "description": "A list of users who are following the current user.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "following": {
                                "description": "A list of users who the current user is following.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/User"
                                }
                            },
                            "events": {
                                "description": "A list of events the user is associated with.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            },
                            "competitions": {
                                "description": "A list of competitions the user is associated with.",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Competition"
                                }
                            },
                            "token": {
                                "description": "An auth token that will only be returned when a user logins or registers.",
                                "type": "string"
                            },
                            "invirtu_user_id": {
                                "description": "The user id for invirtu. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "invirtu_user_jwt_token": {
                                "description": "The invirtu auth token for this user. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "facebook_auth_token": {
                                "description": "The auth token for facebook. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "facebook_id": {
                                "description": "The user id for facebook. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "twitch_auth_token": {
                                "description": "The auth token for twitch. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "twitch_id": {
                                "description": "The user's id for twitch. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "youtube_auth_token": {
                                "description": "The auth token for youtube. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "youtube_id": {
                                "description": "The youtube user id. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "stripe_express_account_id": {
                                "description": "The user's id for their stripe express account. Will only be return of the auth token is the current user.",
                                "type": "string"
                            },
                            "stripe_donation_purhcase_link_url": {
                                "description": "The page to donate to this user using stripe. Will only be return of the auth token is the current user.",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "UserOneTimeToken": {
                "title": "User One Time Token Model",
                "description": "The one time token is a special token used for logging-in.",
                "properties": {
                    "id": {
                        "description": "The id of the one time login request.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "one_time_login_token": {
                        "description": "The token that must be passed back when logging in",
                        "type": "string"
                    },
                    "one_time_login_token_date": {
                        "description": "The date in which the token was created.",
                        "type": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User model",
                "description": "The model describes the user.",
                "properties": {
                    "id": {
                        "description": "The id of the user.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "first_name": {
                        "description": "The users first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "The users last name",
                        "type": "string"
                    },
                    "username": {
                        "description": "The username associated with the user",
                        "type": "string"
                    },
                    "display_name": {
                        "description": "The name to show to others for the users",
                        "type": "string"
                    },
                    "bio": {
                        "description": "Text information about the user.",
                        "type": "string"
                    },
                    "avatar": {
                        "description": "The users avatar image. This property is read-only and the avatar must be updated via image route.",
                        "type": "string",
                        "readOnly": true
                    },
                    "banner_image": {
                        "description": "The users banner image. This property is read-only and must be updated via the image route.",
                        "type": "string",
                        "readOnly": true
                    },
                    "twitter_page": {
                        "description": "The URL to the users Twitter Page.",
                        "type": "string"
                    },
                    "facebook_page": {
                        "description": "The URL to the users Facebook Page.",
                        "type": "string"
                    },
                    "instagram_page": {
                        "description": "The URL to the users Instagram Page.",
                        "type": "string"
                    },
                    "snapchat_page": {
                        "description": "The URL to the users Snapchat Page.",
                        "type": "string"
                    },
                    "tiktok_page": {
                        "title": "tiktok_page",
                        "description": "The URL to the users Tiktok Page.",
                        "type": "string"
                    },
                    "twitch_page": {
                        "title": "twitch_page",
                        "description": "The URL to the users Twitch Page.",
                        "type": "string"
                    },
                    "youtube_page": {
                        "title": "youtube_page",
                        "description": "The URL to the users Youtube Page.",
                        "type": "string"
                    },
                    "paetron_page": {
                        "title": "paetron_page",
                        "description": "The URL to the users Paetron Page.",
                        "type": "string"
                    },
                    "twitter_handle": {
                        "title": "twitter_handle",
                        "description": "The URL to the users Twitter Handle.",
                        "type": "string"
                    },
                    "facebook_handle": {
                        "title": "facebook_handle",
                        "description": "The URL to the users Facebook Handle.",
                        "type": "string"
                    },
                    "instagram_handle": {
                        "title": "instagram_handle",
                        "description": "The URL to the users Instagram Handle.",
                        "type": "string"
                    },
                    "snapchat_handle": {
                        "title": "snapchat_handle",
                        "description": "The URL to the users Snapchat Handle.",
                        "type": "string"
                    },
                    "tiktok_handle": {
                        "description": "The URL to the users Tiktok Handle.",
                        "type": "string"
                    },
                    "twitch_handle": {
                        "description": "The URL to the users Twitch Handle.",
                        "type": "string"
                    },
                    "youtube_handle": {
                        "description": "The URL to the users Youtube Handle.",
                        "type": "string"
                    },
                    "paetron_handle": {
                        "description": "The URL to the users Paetron Handle.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The date the user account was created.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "description": "The date the user account was last updated.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "BaseSocialFields": {
                "title": "Basie Social Model Model",
                "description": "The base model for social that is used on several models.",
                "properties": {
                    "twitter_page": {
                        "description": "The URL to the users Twitter Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "facebook_page": {
                        "description": "The URL to the users Facebook Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "instagram_page": {
                        "description": "The URL to the users Instagram Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "snapchat_page": {
                        "description": "The URL to the users Snapchat Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "tiktok_page": {
                        "description": "The URL to the users Tiktok Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "twitch_page": {
                        "description": "The URL to the users Twitch Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "youtube_page": {
                        "description": "The URL to the users Youtube Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "paetron_page": {
                        "description": "The URL to the users Paetron Page.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "twitter_handle": {
                        "description": "The URL to the users Twitter Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "facebook_handle": {
                        "description": "The URL to the users Facebook Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "instagram_handle": {
                        "description": "The URL to the users Instagram Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "snapchat_handle": {
                        "description": "The URL to the users Snapchat Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "tiktok_handle": {
                        "description": "The URL to the users Tiktok Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "twitch_handle": {
                        "description": "The URL to the users Twitch Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "youtube_handle": {
                        "description": "The URL to the users Youtube Handle.",
                        "type": "string",
                        "maxLength": 255
                    },
                    "paetron_handle": {
                        "description": "The URL to the users Paetron Handle.",
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "RTMPSource": {
                "title": "The RTMP Source for adding and removing.",
                "description": "The RTMP Source for adding and removing.",
                "properties": {
                    "id": {
                        "description": "The id of the RTMP",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "stream_url": {
                        "description": "The RTMP endpoint to send the stream too.",
                        "type": "string"
                    },
                    "label": {
                        "description": "An optional label or name used to identify the stream.",
                        "type": "string"
                    },
                    "fps": {
                        "description": "The Frames Per Second(FPS) to play the stream. The maximum value is 120.",
                        "type": "integer"
                    },
                    "bitrate": {
                        "description": "The bitrate for the stream.",
                        "type": "integer"
                    },
                    "max_bitrate": {
                        "description": "The max bitrate for the stream. The maximum value is 13000.",
                        "type": "integer"
                    },
                    "gop": {
                        "description": "The Group of Pictures (gop) for the stream. The maximum value is 260.",
                        "type": "integer"
                    },
                    "date_added": {
                        "description": "The date/time that the RTMP endpoint was added.",
                        "type": "timestamp",
                        "readOnly": true
                    }
                },
                "type": "object"
            },
            "Recordings": {
                "title": "Recordings of the live stream.",
                "description": "Recordings of the live stream.",
                "properties": {
                    "id": {
                        "description": "The id of the video content.",
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "title": {
                        "description": "The the title of the content.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the content.",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}